$icon-grid-scale: 1.1;

@keyframes icon-scale-in {
   0% {
     transform: scale($icon-grid-scale);
   }

   100% {
     transform: scale(1);
   }
 }

.info-icon-grid {
  @extend %info;

  &.previous-info-table-client-list {
    @include _px(margin-top 112px 34px);
  }

  &.previous-solutions-hero {
    @include _px(margin-top 130px 130px);
  }

  div.container {
    display: flex;
    align-items: center;

    div.info {
      justify-content: center;

      @include _px(
        width 384px 100% !important,
        max-width 384px 100% !important
      );

      p {
        @include _rem(16px, 14px, !important);
        color: $remesh-text-gray;
        line-height: 1.5 !important;
      }
    }

    div.other {
      display: flex;
      justify-content: center;

      div.grid {
        z-index: 1;
        @include _px(max-width 80% 100%);
        display: flex;
        flex-wrap: wrap;

        @supports (display: grid) {
          flex-wrap: nowrap;
          display: grid;
          grid-template-columns: 1fr 1fr;
          @include _px(
            grid-column-gap 31px 0px,
            grid-row-gap 32px 20px
          );

          @include _transform(translateY 80px 0);
        }

        a {
          display: flex;
          flex-direction: column;
          align-items: center;
          width: 50%;
          opacity: 0;
          animation-fill-mode: forwards;

          @include _px(margin-bottom 62px 30px);

          &:nth-child(even) {
            @include _transform(translateY 50% 0);
          }

          &:nth-child(odd) {
            //@include _transform(translateY -26% 0);
          }

          @supports (display: grid) {
            width: auto;
            margin-bottom: 0;

            &:nth-child(even) {
              @include _transform(translateY 26% 0);
            }

            &:nth-child(odd) {
              @include _transform(translateY -26% 0);
              @include _px(margin-right 40px 0px);
            }
          }

          text-decoration: none;
          color: black;
          font-weight: bold;
          @include _rem(21px, 13px);
          line-height: 1.5;

          div.icon {
            position: relative;
            transform: scale($icon-grid-scale);
            animation-fill-mode: forwards;
            @include _px(
              width 200px 100px,
              height 200px 100px
            );

            div.icon-image {
              transition: color 0.2s linear, filter 0.2s linear;
              position: absolute;
              left: 50%;
              top: 50%;
              @include _px(
                width (145px * (170px / 98px)) 145px,
                height (152px * (170px / 98px)) 152px
              );

              transform: translate(-50%, -50%);
              background-size: contain;
              background-position: center;
              background-repeat: no-repeat;
            }
          }

          & > div {
            @include _px(margin-top 22px);
            text-align: center;
            transition: color 0.2s linear, filter 0.2s linear;


            span.arrow {
              position: relative;

              @include _px(
                margin-left 3px,
                width 18px 9px,
                height 17px 8px
              );

              display: inline-block;
              &:after {
                position: absolute;

                @include _px(
                  left  0,
                  top 2px 1px,
                  right 0,
                  bottom -2px -1px
                );

                content: ' ';
                background: url(../img/icon-next-arrow.svg);
                background-size: contain;
                background-repeat: no-repeat;
              }
            }
          }

          &:hover {
            div.icon {
              div.icon-image {
                filter: brightness(1.66) saturate(0.9) brightness(0.9) hue-rotate(9deg);
              }
            }
            & > div {
              color: $remesh-blue-light;
            }
          }
        }
      }
    }
  }

  &.transition--in {
    div.container {
      div.other {
        div.grid {
          a {
            animation-name: fade-in;
            animation-duration: $transition-duration;

            @for $i from 1 through 10 {
              &[data-transition-index='#{$i}'] {
                animation-delay: ($transition-delay * ($i - 1));
                div.icon {
                  animation-delay: ($transition-delay * ($i - 1));
                }
              }
            }

            div.icon {
              animation-name: icon-scale-in;
              animation-duration: $transition-duration;
            }
          }
        }
      }
    }
  }

  @include mq($until: phablet-next) {
    @include info-mobile;
  }
}

